{"version":3,"sources":["index.js"],"names":["dayValue","document","querySelector","hourValue","minValue","secValue","CountdownTimer","selector","targetDate","init","start","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","updateClockFace","days","hours","mins","secs","textContent","pad","Math","floor","value","String","padStart","timer"],"mappings":";;;AA8DA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA9DA,QAAA,gBAEA,IAAMA,EAAWC,SAASC,cAAc,2BAClCC,EAAYF,SAASC,cAAc,4BACnCE,EAAWH,SAASC,cAAc,2BAClCG,EAAWJ,SAASC,cAAc,2BAGlCI,EAAAA,WACkC,SAAA,EAAA,GAAtBC,EAAAA,SAAAA,IAAUC,EAAAA,EAAAA,WAAY,EAAA,KAAA,GAE3BA,KAAAA,WAAaA,EAEbC,KAAAA,OAiDb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA7CW,MAAA,WAAA,IAAA,EAAA,KACEC,KAAAA,QACLC,YAAY,WACR,EAAKD,SACN,OAyCX,CAAA,IAAA,QAtCY,MAAA,WAEME,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKP,WAAaI,EAE9BI,EAAO,KAAKC,kBAAkBF,GAC/BG,KAAAA,gBAAgBF,KAgCjC,CAAA,IAAA,kBA5BiD,MAAA,SAAA,GAA3BG,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACjBH,GAAAA,OAAAA,GAAOC,OAAAA,GAAQC,OAAAA,GAAOC,OAAAA,GAEtCtB,EAASuB,YAAiBJ,GAAAA,OAAAA,GAC1BhB,EAAUoB,YAAiBH,GAAAA,OAAAA,GAC3BhB,EAASmB,YAAiBF,GAAAA,OAAAA,GAC1BhB,EAASkB,YAAiBD,GAAAA,OAAAA,KAsBlC,CAAA,IAAA,oBAlBsBN,MAAAA,SAAAA,GAQP,MAAA,CAAEG,KAPI,KAAKK,IAAIC,KAAKC,MAAMV,EAAQ,QAO1BI,MAND,KAAKI,IACnBC,KAAKC,MAAOV,EAAQ,MAAyB,OAKvBK,KAHT,KAAKG,IAAIC,KAAKC,MAAOV,EAAQ,KAAoB,MAGlCM,KAFf,KAAKE,IAAIC,KAAKC,MAAOV,EAAQ,IAAc,SAYhE,CAAA,IAAA,MANQW,MAAAA,SAAAA,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAKzC,EAtDMvB,GAsDAwB,EAAQ,IAAIxB,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIK,KAAK","file":"src.5b87d8bc.js","sourceRoot":"..\\src","sourcesContent":["import './styles.css';\r\n\r\nconst dayValue = document.querySelector('span[data-value=\"days\"]');\r\nconst hourValue = document.querySelector('span[data-value=\"hours\"]');\r\nconst minValue = document.querySelector('span[data-value=\"mins\"]');\r\nconst secValue = document.querySelector('span[data-value=\"secs\"]');\r\n\r\n\r\nclass CountdownTimer{\r\n    constructor({ selector, targetDate}){\r\n        \r\n        this.targetDate = targetDate;\r\n\r\n        this.init();\r\n    }\r\n\r\n\r\n    init() {\r\n        this.start();\r\n        setInterval(() => {\r\n            this.start();\r\n        }, 500);\r\n    }\r\n    \r\n    start() {\r\n        \r\n            const currentTime = Date.now();\r\n            const deltaTime = this.targetDate - currentTime;\r\n            \r\n            const time = this.getTimeComponents(deltaTime);\r\n            this.updateClockFace(time);\r\n    \r\n    }\r\n\r\n    updateClockFace({ days, hours, mins, secs }) {\r\n        const time = `${days}${hours}${mins}${secs}`;\r\n        \r\n        dayValue.textContent = `${days}`;\r\n        hourValue.textContent = `${hours}`;\r\n        minValue.textContent = `${mins}`;\r\n        secValue.textContent = `${secs}`;\r\n    }\r\n\r\n\r\n    getTimeComponents(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(\r\n        Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n        );\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n        return { days, hours, mins, secs };\r\n    }\r\n    \r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n}\r\n\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jan 1, 2021 23:59:59'),\r\n});\r\n\r\n"]}